{"version":3,"sources":["services/notes.js","redux/actions.js","Notes.js","FormButton.js","NewNote.js","Filter.js","Modal/Modal.js","Modal/ModalForm.js","App.js","redux/modalReducer.js","redux/store.js","redux/noteReducer.js","redux/filterReducer.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","createNew","note","object","post","updateNote","id","put","filterChange","filter","type","Note","dispatch","useDispatch","className","style","width","onClick","openNote","title","e","stopPropagation","checked","important","onChange","noteService","toggleImportanceOf","htmlFor","Notes","notes","useSelector","state","map","FormButton","props","xmlns","height","fillRule","viewBox","d","NewNote","Filter","name","Modal","show","modal","showNote","noteToShow","titleRef","useRef","contentRef","importantRef","close","handleUpdate","updatedNote","current","value","trim","content","closeOnEscapeKeyDown","charCode","keyCode","useEffect","document","body","addEventListener","removeEventListener","ReactDOM","createPortal","CSSTransition","in","unmountOnExit","timeout","enter","exit","defaultValue","ref","placeholder","padding","border","boxShadow","rows","defaultChecked","console","log","getElementById","ModalForm","showForm","handleSave","newNote","App","then","initializeNotes","initialState","reducer","combineReducers","action","concat","noteToChange","find","n","changedNote","store","createStore","composeWithDevTools","applyMiddleware","thunk","render"],"mappings":"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","file":"static/js/main.3213a194.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'https://60dc8bf9c2b6280017febacf.mockapi.io/api/notes'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n} \r\n\r\nconst createNew = async (note) => {\r\n  const object = note\r\n  const response = await axios.post(baseUrl, object)\r\n  return response.data\r\n}\r\n\r\nconst updateNote = async (id, note) => {\r\n  const response = await axios.put(baseUrl + '/' + id, note)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, createNew, updateNote }\r\n","import noteService from \"../services/notes\";\r\n\r\nexport const createNote = (note) => {\r\n  return async (dispatch) => {\r\n    const newNote = await noteService.createNew(note);\r\n    dispatch({\r\n      type: \"NEW_NOTE\",\r\n      data: {\r\n        ...newNote,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const toggleImportanceOf = (note) => {\r\n  return async (dispatch) => {\r\n    await noteService.updateNote(note.id, {important: !note.important})\r\n    dispatch({\r\n      type: \"TOGGLE_IMPORTANCE\",\r\n      data: { id : note.id },\r\n    });\r\n  };\r\n};\r\n\r\nexport const filterChange = (filter) => {\r\n  return {\r\n    type: \"SET_FILTER\",\r\n    filter,\r\n  };\r\n};\r\n\r\nexport const initializeNotes = (notes) => {\r\n  return {\r\n    type: \"INIT_NOTES\",\r\n    data: notes,\r\n  };\r\n};\r\n\r\nexport const openNote = (note) => {\r\n  return {\r\n    type: \"OPEN_NOTE\",\r\n    note: note,\r\n  };\r\n};\r\n\r\nexport const closeNote = () => {\r\n  return {\r\n    type: \"CLOSE_NOTE\",\r\n  };\r\n};\r\n\r\nexport const updateNote = (id, note) => {\r\n  return async (dispatch) => {\r\n    const updatedNote = await noteService.updateNote(id, note);\r\n    dispatch({\r\n      type: \"UPDATE_NOTE\",\r\n      id: id,\r\n      note: updatedNote,\r\n    });\r\n  };\r\n};\r\n\r\nexport const openForm = () => {\r\n  return {\r\n    type: \"OPEN_FORM\",\r\n  };\r\n};\r\n\r\nexport const closeForm = () => {\r\n  return {\r\n    type: \"CLOSE_FORM\",\r\n  };\r\n};\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleImportanceOf, openNote} from './redux/actions'\r\n\r\nconst Note = ({ note }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onCardClick = () => {\r\n    dispatch(openNote(note))\r\n  }\r\n\r\n  return (\r\n    < div className=\"card m-2\" style={{ width: '18rem' }}>\r\n      <div className=\"card-body\" onClick={onCardClick}>\r\n        <p className=\"card-text\" >{note.title}</p>\r\n        <div onClick={(e)=>{e.stopPropagation();}}>\r\n          <input type=\"checkbox\" className=\"form-check-input\" checked={note.important} \r\n            onChange={() => dispatch(toggleImportanceOf(note))} id={note.id} />\r\n          <label className=\"form-check-label\" htmlFor={note.id}><em className=\"m-2\">important</em></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notes = () => {\r\n  const notes = useSelector(state => {\r\n    if (state.filter === 'ALL') {\r\n      return state.notes\r\n    }\r\n    return state.filter === 'IMPORTANT'\r\n      ? state.notes.filter(note => note.important)\r\n      : state.notes.filter(note => !note.important)\r\n  })\r\n\r\n  return (\r\n    <div className=\"d-flex flex-wrap\">  \r\n      {notes.map(note =>\r\n        <Note\r\n          key={note.id}\r\n          note={note}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes","import React from \"react\";\r\nimport './button.scss'\r\n\r\nconst FormButton = (props) => {\r\n  return (\r\n      <svg \r\n        onClick={props.onClick}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fillRule=\"currentColor\"\r\n        className=\"bi bi-plus-lg btn-round\"\r\n        viewBox=\"0 0 16 16\">\r\n        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n      </svg>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {openForm } from \"./redux/actions\";\r\nimport FormButton from \"./FormButton\";\r\n\r\nconst NewNote = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <FormButton\r\n        onClick={() => {\r\n          dispatch(openForm());\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default NewNote;\r\n","import {React} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterChange } from \"./redux/actions\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  return(\r\n    <div className='m-3 row g-2 align-items-start'>\r\n        <div className=\"form-check form-check-inline col-auto\" >\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"radio\" id=\"radio1\"\r\n           onChange={() => dispatch(filterChange('ALL'))} />\r\n          <label className=\"form-check-label\" htmlFor=\"radio1\" >\r\n            all\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check col-auto form-check-inline\" >\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"radio\" id=\"radio2\"\r\n           onChange={() => dispatch(filterChange('IMPORTANT'))} />\r\n          <label className=\"form-check-label\" htmlFor=\"radio2\">\r\n            important\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check col form-check-inline\" >\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"radio\" id=\"radio3\"\r\n           onChange={() => dispatch(filterChange('NONIMPORTANT'))}/>\r\n          <label className=\"form-check-label\" htmlFor=\"radio3\">\r\n            nonimportant\r\n          </label>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, { useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\n\r\nimport { closeNote, updateNote } from \"../redux/actions\";\r\nimport \"./Modal.scss\";\r\n\r\nconst Modal = () => {\r\n  const show = useSelector((state) => state.modal.showNote);\r\n  const note = useSelector((state) => state.modal.noteToShow);\r\n  const dispatch = useDispatch();\r\n\r\n  const titleRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n  const importantRef = useRef(null);\r\n\r\n  const close = () => {\r\n    dispatch(closeNote());\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(\r\n      updateNote(note.id, {\r\n        title: titleRef.current.value.trim(),\r\n        content: contentRef.current.value.trim(),\r\n        important: importantRef.current.checked,\r\n      })\r\n    );\r\n  };\r\n\r\n  const closeOnEscapeKeyDown = (e) => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      close();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <CSSTransition in={show} unmountOnExit timeout={{ enter: 0, exit: 300 }}>\r\n      <div className=\"modal\" onClick={close}>\r\n        <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control-plaintext\"\r\n              defaultValue={note?.title}\r\n              ref={titleRef}\r\n              placeholder={\"Title\"}\r\n            />\r\n          </div>\r\n          <TextareaAutosize\r\n            className=\"modal-body\"\r\n            style={{ padding: \"15px\", border: \"0px\", boxShadow: \"none\" }}\r\n            rows={6}\r\n            defaultValue={note?.content}\r\n            ref={contentRef}\r\n            placeholder={\"Content\"}\r\n          />\r\n          <div className=\"modal-footer\">\r\n            <div className=\"flex-grow-1 \">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                defaultChecked={note?.important}\r\n                id='updateNote'\r\n                ref={importantRef}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor='updateNote'>\r\n                <em className=\"m-2\">important</em>\r\n              </label>\r\n            </div>\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                console.log(titleRef.current.value, contentRef.current.value);\r\n                handleUpdate();\r\n                close();\r\n              }}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"23\"\r\n                height=\"23\"\r\n                fillRule=\"currentColor\"\r\n                className=\"bi bi-check2\"\r\n                viewBox=\"0 0 16 16\">\r\n                <path d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\n\r\nimport { closeForm, createNote } from \"../redux/actions\";\r\nimport \"./Modal.scss\";\r\n\r\nconst ModalForm = () => {\r\n  const show = useSelector(state => state.modal.showForm)\r\n  const dispatch = useDispatch();\r\n\r\n  const titleRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n  const importantRef = useRef(null);\r\n\r\n  const close = () => {\r\n    dispatch(closeForm());\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const title = titleRef.current.value.trim()\r\n    const content = contentRef.current.value.trim()\r\n    const important = importantRef.current.checked\r\n    if (title ==='') return\r\n    dispatch(createNote({title, content, important}));\r\n  };\r\n\r\n  const closeOnEscapeKeyDown = (e) => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      close();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <CSSTransition in={show} unmountOnExit timeout={{ enter: 0, exit: 300 }}>\r\n      <div className=\"modal\" onClick={close}>\r\n        <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <input type=\"text\" className=\"form-control-plaintext\" ref={titleRef} placeholder={'Title'} />\r\n          </div>\r\n          <TextareaAutosize\r\n            className=\"modal-body\"\r\n            style={{ padding: \"15px\", border: \"0px\", boxShadow: \"none\" }}\r\n            rows={6}\r\n            ref={contentRef}\r\n            placeholder={'Content'}\r\n          />\r\n          <div className=\"modal-footer\">\r\n          <div className=\"flex-grow-1 \">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                defaultChecked={false}\r\n                id='createNote'\r\n                ref={importantRef}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor='createNote'>\r\n                <em className=\"m-2\">important</em>\r\n              </label>\r\n            </div>\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                console.log(titleRef.current.value, contentRef.current.value);\r\n                handleSave();\r\n                close();\r\n              }}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"23\"\r\n                height=\"23\"\r\n                fillRule=\"currentColor\"\r\n                className=\"bi bi-check2\"\r\n                viewBox=\"0 0 16 16\">\r\n                <path d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { useEffect } from \"react\";\r\nimport Notes from \"./Notes\";\r\nimport NewNote from \"./NewNote\";\r\nimport Filter from \"./Filter\";\r\nimport noteService from \"./services/notes\";\r\nimport { initializeNotes } from \"./redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"./Modal/Modal\";\r\nimport ModalForm from \"./Modal/ModalForm\";\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((notes) => dispatch(initializeNotes(notes)));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <Filter />\r\n        <NewNote />\r\n      </div>\r\n      <Notes />\r\n      <Modal />\r\n      <ModalForm />\r\n    </div>\r\n  );\r\n};\r\n","\r\nconst initialState = {\r\n  showNote: false,\r\n  showForm: false\r\n}\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'OPEN_NOTE':\r\n      return {...state, showNote: true, noteToShow: action.note}\r\n    case 'CLOSE_NOTE': \r\n      return {...state, showNote: false}\r\n    case 'OPEN_FORM':\r\n      return {...state, showForm: true}\r\n    case 'CLOSE_FORM':\r\n      return {...state, showForm: false}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport { filterReducer   } from \"./filterReducer\";\r\nimport { modalReducer } from './modalReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {noteReducer} from './noteReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notes: noteReducer,\r\n  filter: filterReducer,\r\n  modal: modalReducer\r\n})\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n","const initialState = [\r\n  {\r\n    title: 'reducer defines how redux store works',\r\n    important: true,\r\n    id: 1,\r\n  },\r\n  {\r\n    title: 'state of store can contain any data',\r\n    important: false,\r\n    id: 2,\r\n  },\r\n]\r\n\r\nexport const noteReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'NEW_NOTE':\r\n      return state.concat(action.data)\r\n    case 'INIT_NOTES':\r\n      return action.data\r\n    case 'TOGGLE_IMPORTANCE': {\r\n      const id = action.data.id\r\n      const noteToChange = state.find(n => n.id === id)\r\n      const changedNote = {\r\n        ...noteToChange,\r\n        important: !noteToChange.important\r\n      }\r\n      return state.map(note =>\r\n        note.id !== id ? note : changedNote\r\n      )\r\n    }\r\n    case \"UPDATE_NOTE\": {\r\n      const id = action.id\r\n      const noteToChange = state.find(n => n.id === id)\r\n      const changedNote = {\r\n        ...noteToChange,\r\n        ...action.note\r\n      }\r\n      return state.map(note =>\r\n        note.id !== id ? note : changedNote\r\n      )\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","export const filterReducer = (state = 'ALL', action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport {App} from './App'\nimport {store} from './redux/store'\nimport \"./index.scss\";\n\n\nReactDOM.render(\n   <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n  )"],"sourceRoot":""}